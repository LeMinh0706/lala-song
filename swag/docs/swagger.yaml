basePath: /api
definitions:
  db.Genre:
    properties:
      id:
        type: integer
      image_url:
        type: string
      name:
        type: string
    type: object
  db.GetListSingerRow:
    properties:
      fullname:
        type: string
      id:
        type: integer
      image_url:
        type: string
    type: object
  db.GetMeRow:
    properties:
      avt:
        type: string
      fullname:
        type: string
      gender:
        type: integer
      role_id:
        type: integer
    type: object
  db.GetSingerRow:
    properties:
      fullname:
        type: string
      id:
        type: integer
      image_url:
        type: string
    type: object
  db.Singer:
    properties:
      fullname:
        type: string
      id:
        type: integer
      image_url:
        type: string
      is_deleted:
        type: boolean
    type: object
  genre.GenresResponse:
    properties:
      genres:
        items:
          $ref: '#/definitions/db.Genre'
        type: array
      total:
        type: integer
    type: object
  res.ErrSwaggerJson:
    properties:
      code:
        type: integer
      data: {}
      message:
        type: string
    type: object
  singer.SingersResponse:
    properties:
      singers:
        items:
          $ref: '#/definitions/db.GetListSingerRow'
        type: array
      total:
        type: integer
    type: object
  user.Login:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  user.LoginResponse:
    properties:
      access_token:
        type: string
    type: object
  user.Register:
    properties:
      fullname:
        maxLength: 16
        minLength: 6
        type: string
      gender:
        maximum: 1
        minimum: 0
        type: integer
      password:
        maxLength: 16
        minLength: 6
        type: string
      username:
        maxLength: 16
        minLength: 6
        type: string
    required:
    - fullname
    - gender
    - password
    - username
    type: object
host: 54.254.208.243:80
info:
  contact:
    email: fiber@swagger.io
    name: API Support
  description: This is a sample swagger for Fiber
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Fiber Example API
  version: "1.0"
paths:
  /genres:
    get:
      consumes:
      - application/json
      description: Get list genres with page and page size (Limit-Offset)
      parameters:
      - description: Page
        in: query
        name: page
        required: true
        type: integer
      - description: Page Size
        in: query
        name: page_size
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/genre.GenresResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/res.ErrSwaggerJson'
      summary: Get list genres
      tags:
      - Genres
    post:
      consumes:
      - multipart/form-data
      description: Create Genre
      parameters:
      - description: name
        in: formData
        name: name
        required: true
        type: string
      - description: Image genre
        in: formData
        name: image
        required: true
        type: file
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/db.Genre'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/res.ErrSwaggerJson'
      security:
      - BearerAuth: []
      summary: Create Genre
      tags:
      - Genres
  /genres/{id}:
    delete:
      consumes:
      - application/json
      description: Delete genre with id
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No content
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/res.ErrSwaggerJson'
      security:
      - BearerAuth: []
      summary: Delete genre with id
      tags:
      - Genres
    get:
      consumes:
      - application/json
      description: Get genre with id
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.Genre'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/res.ErrSwaggerJson'
      summary: Get genre with id
      tags:
      - Genres
    put:
      consumes:
      - application/json
      description: Update genre
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      - description: name
        in: formData
        name: name
        type: string
      - description: Image comment
        in: formData
        name: image
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.Genre'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/res.ErrSwaggerJson'
      security:
      - BearerAuth: []
      summary: Update genre
      tags:
      - Genres
  /singers:
    get:
      consumes:
      - application/json
      description: Get list singers with page and page size (Limit-Offset)
      parameters:
      - description: Page
        in: query
        name: page
        required: true
        type: integer
      - description: Page Size
        in: query
        name: page_size
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/singer.SingersResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/res.ErrSwaggerJson'
      summary: Get list singers
      tags:
      - Singers
    post:
      consumes:
      - multipart/form-data
      description: Create Singer
      parameters:
      - description: fullname
        in: formData
        name: fullname
        required: true
        type: string
      - description: Image singer
        in: formData
        name: image
        required: true
        type: file
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/db.Singer'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/res.ErrSwaggerJson'
      security:
      - BearerAuth: []
      summary: Create Singer
      tags:
      - Singers
  /singers/{id}:
    get:
      consumes:
      - application/json
      description: Get singer with id
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.GetSingerRow'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/res.ErrSwaggerJson'
      summary: Get singer with id
      tags:
      - Singers
    put:
      consumes:
      - application/json
      description: Update singer
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      - description: fullname
        in: formData
        name: fullname
        type: string
      - description: Image comment
        in: formData
        name: image
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.GetSingerRow'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/res.ErrSwaggerJson'
      security:
      - BearerAuth: []
      summary: Update singer
      tags:
      - Singers
  /singers/soft/{id}:
    post:
      consumes:
      - application/json
      description: Delete singer with id
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No content
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/res.ErrSwaggerJson'
      security:
      - BearerAuth: []
      summary: Delete singer with id
      tags:
      - Singers
  /users/login:
    post:
      consumes:
      - application/json
      description: Login to be more handsome
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/user.Login'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.LoginResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/res.ErrSwaggerJson'
      summary: Login user
      tags:
      - Users
  /users/me:
    get:
      consumes:
      - application/json
      description: All your account is in here ->
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.GetMeRow'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/res.ErrSwaggerJson'
      security:
      - BearerAuth: []
      summary: It's you
      tags:
      - Users
  /users/register:
    post:
      consumes:
      - application/json
      description: Join with us
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/user.Register'
      produces:
      - application/json
      responses:
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/res.ErrSwaggerJson'
      summary: Register user
      tags:
      - Users
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
